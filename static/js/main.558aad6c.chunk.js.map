{"version":3,"sources":["components/slider/slideItem.js","components/scripts/slides.js","components/slider/slidesContainer.js","components/manager/sliderData.js","components/manager/sliderManager.js","components/header.js","App.js","index.js"],"names":["slideItem","props","visible","className","text","author","setSlides","index","next","prev","slides","document","getElementsByClassName","length","i","console","log","style","slidesContainer","state","actualSlide","quoteArr","cleanList","quoteList","navNext","bind","navPrev","goTo","list","counter","newList","id","scripts","this","setState","prevState","leftValue","rightValue","a","b","quotes","map","item","key","len","circles","onClick","element","buttonPrev","aria-hidden","buttonNext","rel","href","React","Component","sliderData","type","name","value","onChange","e","handler","checked","removeSlide","sliderManager","randomF","addSlide","Header","App","data","slide","target","push","copyList","splice","fetch","response","json","en","ReactDOM","render","StrictMode","getElementById"],"mappings":"uSAoBeA,MAlBf,SAAmBC,GAEjB,OAAsB,IAAlBA,EAAMC,QAEN,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,gBACb,4BAAKF,EAAMG,OAEb,yBAAKD,UAAU,iBACb,kCAAQF,EAAMI,OAAd,SAMD,MCjBF,SAASC,EAAUC,GACxB,IACIC,EACAC,EAFEC,EAASC,SAASC,uBAAuB,mBAI/CH,EAAOF,EAAQ,GADfC,EAAOD,EAAQ,GAEJG,EAAOG,OAAS,IACzBL,EAAO,GAELC,EAAO,IACTA,EAAOC,EAAOG,OAAS,GAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOG,OAAQC,IACjCC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,SAAWT,GACnBO,IAAMP,GACRG,EAAOI,GAAGG,MAAV,UAA+B,iBAC/BP,EAAOI,GAAGG,MAAV,WAAgC,YACvBH,IAAMN,EACfE,EAAOI,GAAGG,MAAV,UAA+B,mBACtBH,IAAML,EACfC,EAAOI,GAAGG,MAAV,UAA+B,qBAE/BP,EAAOI,GAAGG,MAAV,UAA+B,oBAC/BP,EAAOI,GAAGG,MAAV,WAAgC,QAKxBN,SAASC,uBAAuB,e,ICwH/BM,E,kDAhJb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,YAAa,EACbC,SAAU,EAAKC,UAAU,EAAKrB,MAAMsB,YAEtC,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBARK,E,sDAUTG,GAIR,IAHA,IAAIC,EAAU,EACVC,EAAU,GAELhB,EAAI,EAAGA,EAAIc,EAAKf,OAAQC,KACP,IAApBc,EAAKd,GAAGZ,UACV4B,EAAQD,EAAU,GAAK,CACrBE,GAAIF,EACJzB,KAAMwB,EAAKd,GAAGV,KACdC,OAAQuB,EAAKd,GAAGT,OAChBH,QAAS0B,EAAKd,GAAGZ,SAEnB2B,KAIJ,OAAOC,I,0CAGPE,EAAkBC,KAAKd,MAAMC,e,qCAK7B,IADA,IAAIS,EAAU,EACLf,EAAI,EAAGA,EAAImB,KAAKX,UAAUW,KAAKhC,MAAMsB,WAAWV,OAAQC,KACxB,IAAnCmB,KAAKd,MAAME,SAASP,GAAGZ,SACzB2B,IAGJ,OAAOA,I,gCAEE,IAAD,OACRI,KAAKC,UAAS,SAACC,GACb,OACEA,EAAUf,YAAc,IACxB,EAAKE,UAAU,EAAKrB,MAAMsB,WAAWV,OAE9B,CAAEO,YAAa,GAEjB,CAAEA,YAAae,EAAUf,YAAc,Q,gCAIvC,IAAD,OACRa,KAAKC,UAAS,SAACC,GACb,OAA8B,IAA1BA,EAAUf,YACL,CAAEA,YAAa,EAAKE,UAAU,EAAKrB,MAAMsB,WAAWV,OAAS,GAE/D,CAAEO,YAAae,EAAUf,YAAc,Q,2BAI7Cb,GACH,IAEI6B,EACAC,EAHAC,EAAIL,KAAKd,MAAMC,YACfmB,EAAIhC,EAAQ,EAGhB,GAAI+B,EAAIC,EAGN,IAFAH,EAAYG,EAAID,IAChBD,EAAaC,GAAKC,EAAIN,KAAKd,MAAME,SAASR,SAExC,IAAK,IAAIC,EAAI,EAAGA,GAAKsB,EAAWtB,IAC9BmB,KAAKT,eAGP,IAAK,IAAIV,EAAI,EAAGA,GAAKuB,EAAYvB,IAC/BmB,KAAKP,eAMT,IAFAU,EAAYG,GAAKD,EAAIL,KAAKd,MAAME,SAASR,UACzCwB,EAAaC,EAAIC,GAEf,IAAK,IAAIzB,EAAI,EAAGA,GAAKsB,EAAWtB,IAC9BmB,KAAKT,eAGP,IAAK,IAAIV,EAAI,EAAGA,GAAKuB,EAAYvB,IAC/BmB,KAAKP,Y,2CAMXM,EAAkBC,KAAKd,MAAMC,aAC7BL,QAAQC,IAAIiB,KAAKX,UAAUW,KAAKhC,MAAMsB,c,+BAE9B,IAAD,OACDiB,EAASP,KAAKX,UAAUW,KAAKhC,MAAMsB,WAAWkB,KAAI,SAACC,GAAD,OACtD,kBAAC,EAAD,CACEC,IAAKD,EAAKX,GACVA,GAAIW,EAAKX,GACT3B,KAAMsC,EAAKtC,KACXC,OAAQqC,EAAKrC,OACbuC,IAAK,EAAKtB,UAAU,EAAKrB,MAAMsB,WAC/BrB,QAASwC,EAAKxC,aAGZ2C,EAAUZ,KAAKX,UAAUW,KAAKhC,MAAMsB,WAAWkB,KAAI,SAACC,GAAD,OACvD,wBACEvC,UAAU,cACVwC,IAAKD,EAAKX,GACVe,QAAS,SAACC,GAAD,OAAa,EAAKpB,KAAKe,EAAKX,MAErC,uBAAG5B,UAAU,uBAGX6C,EACJ,yBAAK7C,UAAU,eAAe2C,QAASb,KAAKP,SAC1C,uBAAGvB,UAAU,qBAAqB8C,cAAY,UAG5CC,EACJ,yBAAK/C,UAAU,eAAe2C,QAASb,KAAKT,SAC1C,uBAAGrB,UAAU,sBAAsB8C,cAAY,UAGnD,OACE,yBAAK9C,UAAU,qBACb,0BACEgD,IAAI,aACJC,KAAK,uFAEP,yBAAKjD,UAAU,gBAAgBqC,GAC/B,wBAAIrC,UAAU,qBAAqB0C,GACnC,yBAAK1C,UAAU,kBACZ6C,EACAE,Q,GA1ImBG,IAAMC,WC0CrBC,MA5Cf,SAAoBtD,GAClB,OACE,yBAAKE,UAAU,eACb,yBAAKA,UAAU,eACb,8BACEqD,KAAK,WACLC,KAAK,OACLC,MAAOzD,EAAMG,KACb2B,GAAI9B,EAAM8B,GACV4B,SAAU,SAACC,GAAD,OAAO3D,EAAM4D,QAAQD,OAGnC,yBAAKzD,UAAU,oBACb,yBAAKA,UAAU,gBACb,2BACEqD,KAAK,OACLC,KAAK,SACLC,MAAOzD,EAAMI,OACb0B,GAAI9B,EAAM8B,GACV4B,SAAU,SAACC,GAAD,OAAO3D,EAAM4D,QAAQD,OAGnC,yBAAKzD,UAAU,iBACb,2BACEqD,KAAK,WACLC,KAAK,UACLK,QAAS7D,EAAMC,QACf6B,GAAI9B,EAAM8B,GACV4B,SAAU,SAACC,GAAD,OAAO3D,EAAM4D,QAAQD,MAEjC,yCAEF,uBACEzD,UAAU,iBACV4B,GAAI9B,EAAM8B,GACVe,QAAS,kBAAM7C,EAAM8D,YAAY9D,EAAM8B,MAEvC,uBAAG5B,UAAU,cAAc8C,cAAY,aCGlCe,E,kDAvCb,WAAY/D,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXE,SAAU,EAAKpB,MAAMsB,WAEvB,EAAK0C,QAAU,EAAKA,QAAQxC,KAAb,gBALE,E,sDAQjBV,QAAQC,IAAI,O,wFAIZiB,KAAKgC,Y,+BAGG,IAAD,OACDzB,EAASP,KAAKhC,MAAMsB,UAAUkB,KAAI,SAACC,GAAD,OACtC,kBAAC,EAAD,CACEC,IAAKD,EAAKX,GACVA,GAAIW,EAAKX,GACT3B,KAAMsC,EAAKtC,KACXC,OAAQqC,EAAKrC,OACbuC,IAAK,EAAKzB,MAAME,SAASR,OACzBX,QAASwC,EAAKxC,QACd2D,QAAS,EAAK5D,MAAM4D,QACpBE,YAAa,EAAK9D,MAAM8D,iBAG5B,OACE,yBAAK5D,UAAU,sBACZqC,EACD,4BAAQrC,UAAU,cAAc2C,QAASb,KAAKhC,MAAMiE,UAApD,kB,GAhCoBb,IAAMC,WCInBa,MAJf,WACE,OAAO,mDCiFMC,G,wDA5Eb,aAAe,IAAD,8BACZ,gBACKjD,MAAQ,CACXE,SAAU,GACVgD,KAAM,MAER,EAAKR,QAAU,EAAKA,QAAQpC,KAAb,gBACf,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAKsC,YAAc,EAAKA,YAAYtC,KAAjB,gBARP,E,oDAUNmC,GACN,IAAI9B,EAAO,YAAOG,KAAKd,MAAME,UACzBiD,EAAQxC,EAAQ8B,EAAEW,OAAOxC,GAAK,GAClChB,QAAQC,IAAI4C,EAAEW,OAAOxC,GAAK,GACJ,YAAlB6B,EAAEW,OAAOd,KACXa,EAAMpE,QAAU0D,EAAEW,OAAOT,QACE,SAAlBF,EAAEW,OAAOd,KAClBa,EAAMlE,KAAOwD,EAAEW,OAAOb,MACK,WAAlBE,EAAEW,OAAOd,OAClBa,EAAMjE,OAASuD,EAAEW,OAAOb,OAG1B5B,EAAQ8B,EAAEW,OAAOxC,GAAK,GAAKuC,EAC3BrC,KAAKC,SAAS,CAAEb,SAAUS,M,iCAI1B,IAAIA,EAAO,YAAOG,KAAKd,MAAME,UAC7BS,EAAQ0C,KAAK,CACXzC,GAAIE,KAAKd,MAAME,SAASR,OAAS,EACjCT,KAAM,GACNC,OAAQ,GACRH,SAAS,IAEX+B,KAAKC,SAAS,CAAEb,SAAUS,M,kCAGhBvB,GAGV,IAFA,IAAIkE,EAAQ,YAAOxC,KAAKd,MAAME,UAErBP,GADK2D,EAASC,OAAOnE,EAAQ,EAAG,GAC5B,GAAGO,EAAI2D,EAAS5D,OAAQC,IACnC2D,EAAS3D,GAAGiB,GAAKjB,EAAI,EAEvBmB,KAAKC,SAAS,CAAEb,SAAUoD,M,sKAGd,6D,SACWE,MADX,8D,cACNC,E,gBACaA,EAASC,O,OAE5B,IAFMR,E,OACFvC,EAAU,GACLhB,EAAI,EAAGA,EAAI,EAAGA,IACrBgB,EAAQhB,GAAK,CACXiB,GAAIjB,EAAI,EACRV,KAAMiE,EAAKvD,GAAGgE,GACdzE,OAAQgE,EAAKvD,GAAGT,OAChBH,SAAS,GAGb+B,KAAKC,SAAS,CAAEb,SAAUS,I,sIAG1B,OACE,yBAAK3B,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBoB,UAAWU,KAAKd,MAAME,WACtC,kBAAC,EAAD,CACEE,UAAWU,KAAKd,MAAME,SACtBwC,QAAS5B,KAAK4B,QACdK,SAAUjC,KAAKiC,SACfH,YAAa9B,KAAK8B,mB,GAtEVV,IAAMC,YCHxByB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtE,SAASuE,eAAe,W","file":"static/js/main.558aad6c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction slideItem(props) {\r\n  var slide;\r\n  if (props.visible === true) {\r\n    slide = (\r\n      <div className=\"carousel__slide\">\r\n        <div className=\"slide__quote\">\r\n          <h3>{props.text}</h3>\r\n        </div>\r\n        <div className=\"slide__author\">\r\n          <h4> - {props.author} - </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n    return slide;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default slideItem;\r\n","export function setSlides(index) {\r\n  const slides = document.getElementsByClassName(\"carousel__slide\");\r\n  let next;\r\n  let prev;\r\n  next = index + 1;\r\n  prev = index - 1;\r\n  if (next > slides.length - 1) {\r\n    next = 0;\r\n  }\r\n  if (prev < 0) {\r\n    prev = slides.length - 1;\r\n  }\r\n  for (let i = 0; i < slides.length; i++) {\r\n    console.log(i);\r\n    console.log(\"index:\" + index);\r\n    if (i === index) {\r\n      slides[i].style[\"transform\"] = \"translateX(0%)\";\r\n      slides[i].style[\"transition\"] = \"all 0.5s\";\r\n    } else if (i === next) {\r\n      slides[i].style[\"transform\"] = \"translateX(100%)\";\r\n    } else if (i === prev) {\r\n      slides[i].style[\"transform\"] = \"translateX(-100%)\";\r\n    } else {\r\n      slides[i].style[\"transform\"] = \"translateX(-100%)\";\r\n      slides[i].style[\"transition\"] = \"none\";\r\n    }\r\n  }\r\n}\r\n\r\nvar buttons = document.getElementsByClassName(\"nav__circle\");\r\nexport function init() {\r\n  for (let i = 0; i < buttons.length; i++) {\r\n    buttons[i].addEventListener(\"click\", function () {\r\n      for (let j = 0; j < buttons.length; j++) {\r\n        buttons[j].querySelector(\"i\").classList.remove(\"fa-circle\");\r\n      }\r\n\r\n      buttons[i].querySelector(\"i\").classList.add(\"fa-circle\");\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Slides from \"./slideItem\";\r\nimport * as scripts from \"../scripts/slides\";\r\n\r\nclass slidesContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      actualSlide: 0,\r\n      quoteArr: this.cleanList(this.props.quoteList),\r\n    };\r\n    this.navNext = this.navNext.bind(this);\r\n    this.navPrev = this.navPrev.bind(this);\r\n    this.goTo = this.goTo.bind(this);\r\n  }\r\n  cleanList(list) {\r\n    let counter = 1;\r\n    let newList = [];\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].visible === true) {\r\n        newList[counter - 1] = {\r\n          id: counter,\r\n          text: list[i].text,\r\n          author: list[i].author,\r\n          visible: list[i].visible,\r\n        };\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    return newList;\r\n  }\r\n  componentDidMount() {\r\n    scripts.setSlides(this.state.actualSlide);\r\n  }\r\n\r\n  numberSlides() {\r\n    let counter = 0;\r\n    for (let i = 0; i < this.cleanList(this.props.quoteList).length; i++) {\r\n      if (this.state.quoteArr[i].visible === true) {\r\n        counter++;\r\n      }\r\n    }\r\n    return counter;\r\n  }\r\n  navNext() {\r\n    this.setState((prevState) => {\r\n      if (\r\n        prevState.actualSlide + 1 ===\r\n        this.cleanList(this.props.quoteList).length\r\n      ) {\r\n        return { actualSlide: 0 };\r\n      }\r\n      return { actualSlide: prevState.actualSlide + 1 };\r\n    });\r\n  }\r\n\r\n  navPrev() {\r\n    this.setState((prevState) => {\r\n      if (prevState.actualSlide === 0) {\r\n        return { actualSlide: this.cleanList(this.props.quoteList).length - 1 };\r\n      }\r\n      return { actualSlide: prevState.actualSlide - 1 };\r\n    });\r\n  }\r\n\r\n  goTo(index) {\r\n    let a = this.state.actualSlide;\r\n    let b = index - 1;\r\n    var leftValue;\r\n    var rightValue;\r\n    if (a > b) {\r\n      leftValue = b - a;\r\n      rightValue = a - (b - this.state.quoteArr.length);\r\n      if (leftValue > rightValue) {\r\n        for (let i = 1; i <= leftValue; i++) {\r\n          this.navNext();\r\n        }\r\n      } else {\r\n        for (let i = 1; i <= rightValue; i++) {\r\n          this.navPrev();\r\n        }\r\n      }\r\n    } else {\r\n      leftValue = b - (a - this.state.quoteArr.length);\r\n      rightValue = a - b;\r\n      if (leftValue > rightValue) {\r\n        for (let i = 1; i <= leftValue; i++) {\r\n          this.navNext();\r\n        }\r\n      } else {\r\n        for (let i = 1; i <= rightValue; i++) {\r\n          this.navPrev();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    scripts.setSlides(this.state.actualSlide);\r\n    console.log(this.cleanList(this.props.quoteList));\r\n  }\r\n  render() {\r\n    const quotes = this.cleanList(this.props.quoteList).map((item) => (\r\n      <Slides\r\n        key={item.id}\r\n        id={item.id}\r\n        text={item.text}\r\n        author={item.author}\r\n        len={this.cleanList(this.props.quoteList)}\r\n        visible={item.visible}\r\n      />\r\n    ));\r\n    const circles = this.cleanList(this.props.quoteList).map((item) => (\r\n      <li\r\n        className=\"nav__circle\"\r\n        key={item.id}\r\n        onClick={(element) => this.goTo(item.id)}\r\n      >\r\n        <i className=\"fa fa-circle-o\"></i>\r\n      </li>\r\n    ));\r\n    const buttonPrev = (\r\n      <div className=\"button--prev\" onClick={this.navPrev}>\r\n        <i className=\"fa fa-chevron-left\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    );\r\n    const buttonNext = (\r\n      <div className=\"button--next\" onClick={this.navNext}>\r\n        <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"slider__container\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n        ></link>\r\n        <div className=\"slide__group\">{quotes}</div>\r\n        <ul className=\"slide__navigation\">{circles}</ul>\r\n        <div className=\"slide__buttons\">\r\n          {buttonPrev}\r\n          {buttonNext}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default slidesContainer;\r\n","import React from \"react\";\r\n\r\nfunction sliderData(props) {\r\n  return (\r\n    <div className=\"slide__data\">\r\n      <div className=\"data__quote\">\r\n        <textarea\r\n          type=\"textarea\"\r\n          name=\"text\"\r\n          value={props.text}\r\n          id={props.id}\r\n          onChange={(e) => props.handler(e)}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"data__properties\">\r\n        <div className=\"data__author\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"author\"\r\n            value={props.author}\r\n            id={props.id}\r\n            onChange={(e) => props.handler(e)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"data__visible\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"visible\"\r\n            checked={props.visible}\r\n            id={props.id}\r\n            onChange={(e) => props.handler(e)}\r\n          ></input>\r\n          <h5>Visible?</h5>\r\n        </div>\r\n        <a\r\n          className=\"button--remove\"\r\n          id={props.id}\r\n          onClick={() => props.removeSlide(props.id)}\r\n        >\r\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default sliderData;\r\n","import React from \"react\";\r\nimport Slides from \"./sliderData\";\r\nclass sliderManager extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quoteArr: this.props.quoteList,\r\n    };\r\n    this.randomF = this.randomF.bind(this);\r\n  }\r\n  randomF() {\r\n    console.log(123);\r\n  }\r\n  componentDidMount() {}\r\n  componentDidUpdate() {\r\n    this.randomF();\r\n  }\r\n\r\n  render() {\r\n    const quotes = this.props.quoteList.map((item) => (\r\n      <Slides\r\n        key={item.id}\r\n        id={item.id}\r\n        text={item.text}\r\n        author={item.author}\r\n        len={this.state.quoteArr.length}\r\n        visible={item.visible}\r\n        handler={this.props.handler}\r\n        removeSlide={this.props.removeSlide}\r\n      />\r\n    ));\r\n    return (\r\n      <div className=\"manager__container\">\r\n        {quotes}\r\n        <button className=\"button--add\" onClick={this.props.addSlide}>\r\n          Add Slide\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default sliderManager;\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return <header>Slider Manager</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport SlideContainer from \"./components/slider/slidesContainer\";\nimport SliderManager from \"./components/manager/sliderManager\";\nimport Header from \"./components/header\";\nimport \"./App.css\";\nimport quoteList from \"./components/slider/quoteList\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quoteArr: [],\n      data: null,\n    };\n    this.handler = this.handler.bind(this);\n    this.addSlide = this.addSlide.bind(this);\n    this.removeSlide = this.removeSlide.bind(this);\n  }\n  handler(e) {\n    let newList = [...this.state.quoteArr];\n    let slide = newList[e.target.id - 1];\n    console.log(e.target.id - 1);\n    if (e.target.name === \"visible\") {\n      slide.visible = e.target.checked;\n    } else if (e.target.name === \"text\") {\n      slide.text = e.target.value;\n    } else if (e.target.name === \"author\") {\n      slide.author = e.target.value;\n    }\n\n    newList[e.target.id - 1] = slide;\n    this.setState({ quoteArr: newList });\n  }\n\n  addSlide() {\n    let newList = [...this.state.quoteArr];\n    newList.push({\n      id: this.state.quoteArr.length + 1,\n      text: \"\",\n      author: \"\",\n      visible: true,\n    });\n    this.setState({ quoteArr: newList });\n  }\n\n  removeSlide(index) {\n    let copyList = [...this.state.quoteArr];\n    let newList = copyList.splice(index - 1, 1);\n    for (let i = 0; i < copyList.length; i++) {\n      copyList[i].id = i + 1;\n    }\n    this.setState({ quoteArr: copyList });\n  }\n  async componentDidMount() {\n    const url = \"https://programming-quotes-api.herokuapp.com/quotes/page/2\";\n    const response = await fetch(url);\n    const data = await response.json();\n    var newList = [];\n    for (let i = 0; i < 5; i++) {\n      newList[i] = {\n        id: i + 1,\n        text: data[i].en,\n        author: data[i].author,\n        visible: true,\n      };\n    }\n    this.setState({ quoteArr: newList });\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <SlideContainer quoteList={this.state.quoteArr} />\n        <SliderManager\n          quoteList={this.state.quoteArr}\n          handler={this.handler}\n          addSlide={this.addSlide}\n          removeSlide={this.removeSlide}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}